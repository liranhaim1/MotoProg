{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { getDoc, setDoc, doc, updateDoc } from 'firebase/firestore';\nimport { firestore } from '../firebase';\nexport const getUser = createAsyncThunk(\"appUsers/getUser\", async id => {\n  const snap = await getDoc(doc(firestore, 'users', id));\n  localStorage.setItem(\"user\", JSON.stringify({\n    id: id,\n    ...snap.data()\n  }));\n  return {\n    id: id,\n    ...snap.data()\n  };\n});\nexport const setUser = createAsyncThunk(\"appUsers/setUser\", async data => {\n  return {\n    id: data.id,\n    email: data.email,\n    ids: data.ids,\n    questionsHistory: data.questionsHistory\n  };\n});\nexport const addUser = createAsyncThunk(\"appUsers/createUser\", async (data, _ref) => {\n  let {\n    dispatch\n  } = _ref;\n  await setDoc(doc(firestore, 'users', data.uid), {\n    email: data.email,\n    ids: [],\n    questionsHistory: {}\n  });\n  return {\n    id: data.uid,\n    email: data.email,\n    ids: [],\n    questionsHistory: {}\n  };\n});\nexport const updateUser = createAsyncThunk(\"appUsers/updateUser\", async (data, _ref2) => {\n  let {\n    dispatch\n  } = _ref2;\n  console.log(\"data.ids => \", data.ids);\n  await updateDoc(doc(firestore, 'users', data.id), {\n    ids: data.ids,\n    questionsHistory: data.questionsHistory\n  });\n  dispatch(getUser(data.id));\n});\nexport const Slice = createSlice({\n  name: \"Users\",\n  initialState: {\n    id: \"\",\n    email: \"\",\n    ids: [],\n    questionsHistory: {}\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getUser.fulfilled, (state, action) => {\n      state.id = action.payload.id;\n      state.email = action.payload.email;\n      state.ids = action.payload.ids;\n      state.questionsHistory = action.payload.questionsHistory;\n    }).addCase(setUser.fulfilled, (state, action) => {\n      state.id = action.payload.id;\n      state.email = action.payload.email;\n      state.ids = action.payload.ids;\n      state.questionsHistory = action.payload.questionsHistory;\n    }).addCase(addUser.fulfilled, (state, action) => {\n      state.id = action.payload.id;\n      state.email = action.payload.email;\n      state.ids = action.payload.ids;\n      state.questionsHistory = action.payload.questionsHistory;\n    });\n  }\n});\nexport default Slice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","getDoc","setDoc","doc","updateDoc","firestore","getUser","id","snap","localStorage","setItem","JSON","stringify","data","setUser","email","ids","questionsHistory","addUser","dispatch","uid","updateUser","console","log","Slice","name","initialState","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","reducer"],"sources":["C:/Users/liranhaim/Desktop/MotoProg_H/src/features/users.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { getDoc, setDoc, doc, updateDoc } from 'firebase/firestore';\nimport { firestore } from '../firebase';\n\nexport const getUser = createAsyncThunk(\"appUsers/getUser\", async (id) => {\n    const snap = await getDoc(doc(firestore, 'users', id))\n    localStorage.setItem(\"user\", JSON.stringify({id:id, ...snap.data()}))\n    return {\n        id: id,\n        ...snap.data()\n    }\n})\n\nexport const setUser = createAsyncThunk(\"appUsers/setUser\", async (data) => {\n    return {\n        id: data.id,\n        email: data.email,\n        ids: data.ids,\n        questionsHistory: data.questionsHistory,\n    }\n})\n\nexport const addUser = createAsyncThunk(\"appUsers/createUser\", async (data, {dispatch}) => {\n    await setDoc(doc(firestore, 'users', data.uid), {\n        email: data.email,\n        ids: [],\n        questionsHistory: {},\n    });\n    return {\n        id: data.uid,\n        email: data.email,\n        ids: [],\n        questionsHistory: {},\n    }\n})\n\nexport const updateUser = createAsyncThunk(\"appUsers/updateUser\", async (data, {dispatch}) => {\n    console.log(\"data.ids => \", data.ids)\n    await updateDoc(doc(firestore, 'users', data.id), {\n        ids: data.ids,\n        questionsHistory: data.questionsHistory,\n    })\n    dispatch(getUser(data.id))\n})\n\nexport const Slice = createSlice({\n    name: \"Users\",\n    initialState: {\n        id: \"\",\n        email: \"\",\n        ids: [],\n        questionsHistory: {},\n    },\n    reducers: {},\n    extraReducers: builder => {\n        builder\n            .addCase(getUser.fulfilled, (state, action) => {\n                state.id = action.payload.id\n                state.email = action.payload.email\n                state.ids = action.payload.ids\n                state.questionsHistory = action.payload.questionsHistory\n            })\n            .addCase(setUser.fulfilled, (state, action) => {\n                state.id = action.payload.id\n                state.email = action.payload.email\n                state.ids = action.payload.ids\n                state.questionsHistory = action.payload.questionsHistory\n            })\n            .addCase(addUser.fulfilled, (state, action) => {\n                state.id = action.payload.id\n                state.email = action.payload.email\n                state.ids = action.payload.ids\n                state.questionsHistory = action.payload.questionsHistory\n            })\n    }\n})\n\nexport default Slice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAASC,MAAM,EAAEC,MAAM,EAAEC,GAAG,EAAEC,SAAS,QAAQ,oBAAoB;AACnE,SAASC,SAAS,QAAQ,aAAa;AAEvC,OAAO,MAAMC,OAAO,GAAGN,gBAAgB,CAAC,kBAAkB,EAAE,MAAOO,EAAE,IAAK;EACtE,MAAMC,IAAI,GAAG,MAAMP,MAAM,CAACE,GAAG,CAACE,SAAS,EAAE,OAAO,EAAEE,EAAE,CAAC,CAAC;EACtDE,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAAC;IAACL,EAAE,EAACA,EAAE;IAAE,GAAGC,IAAI,CAACK,IAAI;EAAE,CAAC,CAAC,CAAC;EACrE,OAAO;IACHN,EAAE,EAAEA,EAAE;IACN,GAAGC,IAAI,CAACK,IAAI;EAChB,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,MAAMC,OAAO,GAAGd,gBAAgB,CAAC,kBAAkB,EAAE,MAAOa,IAAI,IAAK;EACxE,OAAO;IACHN,EAAE,EAAEM,IAAI,CAACN,EAAE;IACXQ,KAAK,EAAEF,IAAI,CAACE,KAAK;IACjBC,GAAG,EAAEH,IAAI,CAACG,GAAG;IACbC,gBAAgB,EAAEJ,IAAI,CAACI;EAC3B,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,MAAMC,OAAO,GAAGlB,gBAAgB,CAAC,qBAAqB,EAAE,OAAOa,IAAI,WAAiB;EAAA,IAAf;IAACM;EAAQ,CAAC;EAClF,MAAMjB,MAAM,CAACC,GAAG,CAACE,SAAS,EAAE,OAAO,EAAEQ,IAAI,CAACO,GAAG,CAAC,EAAE;IAC5CL,KAAK,EAAEF,IAAI,CAACE,KAAK;IACjBC,GAAG,EAAE,EAAE;IACPC,gBAAgB,EAAE,CAAC;EACvB,CAAC,CAAC;EACF,OAAO;IACHV,EAAE,EAAEM,IAAI,CAACO,GAAG;IACZL,KAAK,EAAEF,IAAI,CAACE,KAAK;IACjBC,GAAG,EAAE,EAAE;IACPC,gBAAgB,EAAE,CAAC;EACvB,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,MAAMI,UAAU,GAAGrB,gBAAgB,CAAC,qBAAqB,EAAE,OAAOa,IAAI,YAAiB;EAAA,IAAf;IAACM;EAAQ,CAAC;EACrFG,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEV,IAAI,CAACG,GAAG,CAAC;EACrC,MAAMZ,SAAS,CAACD,GAAG,CAACE,SAAS,EAAE,OAAO,EAAEQ,IAAI,CAACN,EAAE,CAAC,EAAE;IAC9CS,GAAG,EAAEH,IAAI,CAACG,GAAG;IACbC,gBAAgB,EAAEJ,IAAI,CAACI;EAC3B,CAAC,CAAC;EACFE,QAAQ,CAACb,OAAO,CAACO,IAAI,CAACN,EAAE,CAAC,CAAC;AAC9B,CAAC,CAAC;AAEF,OAAO,MAAMiB,KAAK,GAAGzB,WAAW,CAAC;EAC7B0B,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACVnB,EAAE,EAAE,EAAE;IACNQ,KAAK,EAAE,EAAE;IACTC,GAAG,EAAE,EAAE;IACPC,gBAAgB,EAAE,CAAC;EACvB,CAAC;EACDU,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAEC,OAAO,IAAI;IACtBA,OAAO,CACFC,OAAO,CAACxB,OAAO,CAACyB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3CD,KAAK,CAACzB,EAAE,GAAG0B,MAAM,CAACC,OAAO,CAAC3B,EAAE;MAC5ByB,KAAK,CAACjB,KAAK,GAAGkB,MAAM,CAACC,OAAO,CAACnB,KAAK;MAClCiB,KAAK,CAAChB,GAAG,GAAGiB,MAAM,CAACC,OAAO,CAAClB,GAAG;MAC9BgB,KAAK,CAACf,gBAAgB,GAAGgB,MAAM,CAACC,OAAO,CAACjB,gBAAgB;IAC5D,CAAC,CAAC,CACDa,OAAO,CAAChB,OAAO,CAACiB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3CD,KAAK,CAACzB,EAAE,GAAG0B,MAAM,CAACC,OAAO,CAAC3B,EAAE;MAC5ByB,KAAK,CAACjB,KAAK,GAAGkB,MAAM,CAACC,OAAO,CAACnB,KAAK;MAClCiB,KAAK,CAAChB,GAAG,GAAGiB,MAAM,CAACC,OAAO,CAAClB,GAAG;MAC9BgB,KAAK,CAACf,gBAAgB,GAAGgB,MAAM,CAACC,OAAO,CAACjB,gBAAgB;IAC5D,CAAC,CAAC,CACDa,OAAO,CAACZ,OAAO,CAACa,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3CD,KAAK,CAACzB,EAAE,GAAG0B,MAAM,CAACC,OAAO,CAAC3B,EAAE;MAC5ByB,KAAK,CAACjB,KAAK,GAAGkB,MAAM,CAACC,OAAO,CAACnB,KAAK;MAClCiB,KAAK,CAAChB,GAAG,GAAGiB,MAAM,CAACC,OAAO,CAAClB,GAAG;MAC9BgB,KAAK,CAACf,gBAAgB,GAAGgB,MAAM,CAACC,OAAO,CAACjB,gBAAgB;IAC5D,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,eAAeO,KAAK,CAACW,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}