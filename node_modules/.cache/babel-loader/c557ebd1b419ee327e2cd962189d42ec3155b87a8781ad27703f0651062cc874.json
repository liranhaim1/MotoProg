{"ast":null,"code":"import { getDoc, setDoc, doc, updateDoc, addDoc, orderBy, query, where, getDocs, collection, CollectionReference, arrayUnion } from \"firebase/firestore\";\nimport { firestore } from \"../firebase\";\nexport const getHistory = async userId => {\n  try {\n    // Create a query to retrieve the history records for the specified user\n    const q = query(collection(firestore, \"history\"), where(\"userId\", \"==\", userId));\n\n    // Execute the query and get a snapshot of the results\n    const querySnapshot = await getDocs(q);\n\n    // Extract the data from each history record and return as an array\n    const history = querySnapshot.docs.map(doc => doc.data());\n    return history;\n  } catch (error) {\n    console.error(\"Error getting history:\", error);\n  }\n};\nexport const addHistory = async (userId, date, category, score, correctCount, wrongCount, userRate, globalRate, hints50Count, hintsCount) => {\n  const data = {\n    userId,\n    date,\n    category,\n    score,\n    correctCount,\n    wrongCount,\n    userRate,\n    globalRate,\n    hints50Count,\n    hintsCount\n  };\n  await addDoc(collection(firestore, \"history\"), data);\n};","map":{"version":3,"names":["getDoc","setDoc","doc","updateDoc","addDoc","orderBy","query","where","getDocs","collection","CollectionReference","arrayUnion","firestore","getHistory","userId","q","querySnapshot","history","docs","map","data","error","console","addHistory","date","category","score","correctCount","wrongCount","userRate","globalRate","hints50Count","hintsCount"],"sources":["C:/Users/liranhaim/Desktop/MotoProg_H/src/features/history.js"],"sourcesContent":["import {\n  getDoc,\n  setDoc,\n  doc,\n  updateDoc,\n  addDoc,\n  orderBy,\n  query,\n  where,\n  getDocs,\n  collection,\n  CollectionReference,\n  arrayUnion,\n} from \"firebase/firestore\";\nimport { firestore } from \"../firebase\";\n\nexport const getHistory = async (userId) => {\n  try {\n    // Create a query to retrieve the history records for the specified user\n    const q = query(\n      collection(firestore, \"history\"),\n      where(\"userId\", \"==\", userId)\n    );\n\n    // Execute the query and get a snapshot of the results\n    const querySnapshot = await getDocs(q);\n\n    // Extract the data from each history record and return as an array\n    const history = querySnapshot.docs.map((doc) => doc.data());\n\n    return history;\n  } catch (error) {\n    console.error(\"Error getting history:\", error);\n  }\n};\n\nexport const addHistory = async (\n  userId,\n  date,\n  category,\n  score,\n  correctCount,\n  wrongCount,\n  userRate,\n  globalRate,\n  hints50Count,\n  hintsCount\n) => {\n  const data = {\n    userId,\n    date,\n    category,\n    score,\n    correctCount,\n    wrongCount,\n    userRate,\n    globalRate,\n    hints50Count,\n    hintsCount,\n  };\n\n  await addDoc(collection(firestore, \"history\"), data);\n};\n"],"mappings":"AAAA,SACEA,MAAM,EACNC,MAAM,EACNC,GAAG,EACHC,SAAS,EACTC,MAAM,EACNC,OAAO,EACPC,KAAK,EACLC,KAAK,EACLC,OAAO,EACPC,UAAU,EACVC,mBAAmB,EACnBC,UAAU,QACL,oBAAoB;AAC3B,SAASC,SAAS,QAAQ,aAAa;AAEvC,OAAO,MAAMC,UAAU,GAAG,MAAOC,MAAM,IAAK;EAC1C,IAAI;IACF;IACA,MAAMC,CAAC,GAAGT,KAAK,CACbG,UAAU,CAACG,SAAS,EAAE,SAAS,CAAC,EAChCL,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAEO,MAAM,CAAC,CAC9B;;IAED;IACA,MAAME,aAAa,GAAG,MAAMR,OAAO,CAACO,CAAC,CAAC;;IAEtC;IACA,MAAME,OAAO,GAAGD,aAAa,CAACE,IAAI,CAACC,GAAG,CAAEjB,GAAG,IAAKA,GAAG,CAACkB,IAAI,EAAE,CAAC;IAE3D,OAAOH,OAAO;EAChB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;EAChD;AACF,CAAC;AAED,OAAO,MAAME,UAAU,GAAG,OACxBT,MAAM,EACNU,IAAI,EACJC,QAAQ,EACRC,KAAK,EACLC,YAAY,EACZC,UAAU,EACVC,QAAQ,EACRC,UAAU,EACVC,YAAY,EACZC,UAAU,KACP;EACH,MAAMZ,IAAI,GAAG;IACXN,MAAM;IACNU,IAAI;IACJC,QAAQ;IACRC,KAAK;IACLC,YAAY;IACZC,UAAU;IACVC,QAAQ;IACRC,UAAU;IACVC,YAAY;IACZC;EACF,CAAC;EAED,MAAM5B,MAAM,CAACK,UAAU,CAACG,SAAS,EAAE,SAAS,CAAC,EAAEQ,IAAI,CAAC;AACtD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}