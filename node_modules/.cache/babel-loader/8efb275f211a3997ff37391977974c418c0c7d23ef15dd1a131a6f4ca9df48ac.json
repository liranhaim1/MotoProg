{"ast":null,"code":"import _toConsumableArray from\"C:/Users/liranhaim/Desktop/MotoProg_H/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"C:/Users/liranhaim/Desktop/MotoProg_H/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/liranhaim/Desktop/MotoProg_H/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/liranhaim/Desktop/MotoProg_H/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useMemo}from\"react\";import Table from\"@mui/material/Table\";import TableBody from\"@mui/material/TableBody\";import TableCell from\"@mui/material/TableCell\";import TableContainer from\"@mui/material/TableContainer\";import TableHead from\"@mui/material/TableHead\";import TableRow from\"@mui/material/TableRow\";import Paper from\"@mui/material/Paper\";import moment from\"moment/moment\";import CircularProgressWithLabel from\"./Percentage\";import{CircularProgress}from\"@mui/material\";import{Link}from\"react-router-dom\";import classNames from\"classnames\";import{mapStateToProps,mapDispatchToProps}from\"../../store\";import{connect}from\"react-redux\";import{useEffect}from\"react\";import{getHistory,addHistory}from\"../../features/history\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function QuizHistory(props){var userId=props.user.id;var email=props.user.email;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),rows=_useState4[0],setRows=_useState4[1];useEffect(function(){function getData(){return _getData.apply(this,arguments);}function _getData(){_getData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var rowsRes;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return getHistory(userId);case 2:rowsRes=_context.sent;setRows(rowsRes);setLoading(false);case 5:case\"end\":return _context.stop();}},_callee);}));return _getData.apply(this,arguments);}getData();},[userId]);var sortedRows=useMemo(function(){return _toConsumableArray(rows).sort(function(a,b){var aDate=moment(a.date.toDate());var bDate=moment(b.date.toDate());return bDate.diff(aDate);});},[rows]);// const rows = [\n//   {\n//     date: new Date(),\n//     category: \"Python\",\n//     score: 67,\n//     correct_count: 5,\n//     incorrect_count: 2,\n//     hints_used: 0,\n//     hints_50_used: 0,\n//   },\n// ];\n// const sortedRows = rows.sort((a, b) => a.date.getTime() - b.date.getTime()); // sort by date\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-blur\"}),/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:\"MY HISTORY\"}),/*#__PURE__*/_jsxs(TableContainer,{component:Paper,className:classNames(\"table-container\"),children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Game history of \",email]}),/*#__PURE__*/_jsxs(Table,{sx:{minWidth:650},className:\"table\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"Time\"}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"Category\"}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"Score\"}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"Correct\"}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"Incorrect\"}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"Hints\"}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"Fifty hints\"})]})}),loading?/*#__PURE__*/_jsx(CircularProgress,{className:\"table-loading\"}):/*#__PURE__*/_jsx(TableBody,{children:sortedRows.map(function(row){return/*#__PURE__*/_jsxs(TableRow,{sx:{\"&:last-child td, &:last-child th\":{border:0}},children:[/*#__PURE__*/_jsx(TableCell,{align:\"center\",component:\"th\",scope:\"row\",children:moment(new Date(row.date.toDate())).calendar()}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"col-category\",children:[row.category,\" \"]})}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:/*#__PURE__*/_jsx(CircularProgressWithLabel,{value:row.correctCount/(row.correctCount+row.wrongCount)*100})}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:/*#__PURE__*/_jsx(\"span\",{className:\"correct-count\",children:row.correctCount})}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:/*#__PURE__*/_jsx(\"span\",{className:\"wrong-count\",children:row.wrongCount})}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:row.hintsCount}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:row.hints50Count})]},row.name);})})]})]}),/*#__PURE__*/_jsxs(\"ul\",{className:\"links\",children:[/*#__PURE__*/_jsx(Link,{to:\"/\",children:\"Back to Home\"}),/*#__PURE__*/_jsx(Link,{to:\"/play/category\",children:\"Categories\"})]})]});}export default connect(mapStateToProps,mapDispatchToProps)(QuizHistory);","map":{"version":3,"names":["useState","useMemo","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","moment","CircularProgressWithLabel","CircularProgress","Link","classNames","mapStateToProps","mapDispatchToProps","connect","useEffect","getHistory","addHistory","QuizHistory","props","userId","user","id","email","loading","setLoading","rows","setRows","getData","rowsRes","sortedRows","sort","a","b","aDate","date","toDate","bDate","diff","minWidth","map","row","border","Date","calendar","category","correctCount","wrongCount","hintsCount","hints50Count","name"],"sources":["C:/Users/liranhaim/Desktop/MotoProg_H/src/components/quiz/QuizHistory.js"],"sourcesContent":["import { useState,useMemo } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport moment from \"moment/moment\";\nimport CircularProgressWithLabel from \"./Percentage\";\nimport { CircularProgress } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport { mapStateToProps, mapDispatchToProps } from \"../../store\";\nimport { connect } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { getHistory, addHistory } from \"../../features/history\";\n\nfunction QuizHistory(props) {\n  const userId = props.user.id;\n  const email = props.user.email;\n  const [loading, setLoading] = useState(true);\n  const [rows, setRows] = useState([]);\n  \n\n  useEffect(() => {\n    async function getData() {\n      const rowsRes = await getHistory(userId);\n      setRows(rowsRes);\n      setLoading(false);\n    }\n    getData();\n  }, [userId]);\n\n  const sortedRows = useMemo(() => {\n    return [...rows].sort((a, b) => {\n      const aDate = moment(a.date.toDate());\n      const bDate = moment(b.date.toDate());\n      return bDate.diff(aDate);\n    });\n  }, [rows]);\n\n  // const rows = [\n  //   {\n  //     date: new Date(),\n  //     category: \"Python\",\n  //     score: 67,\n  //     correct_count: 5,\n  //     incorrect_count: 2,\n  //     hints_used: 0,\n  //     hints_50_used: 0,\n  //   },\n  // ];\n\n  // const sortedRows = rows.sort((a, b) => a.date.getTime() - b.date.getTime()); // sort by date\n\n  return (\n    <>\n      <div className=\"bg-blur\" />\n      <h1 className=\"title\">MY HISTORY</h1>\n\n      <TableContainer\n        component={Paper}\n        className={classNames(\"table-container\")}\n      >\n        <span>Game history of {email}</span>\n        <Table sx={{ minWidth: 650 }} className=\"table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">Time</TableCell>\n              <TableCell align=\"center\">Category</TableCell>\n              <TableCell align=\"center\">Score</TableCell>\n              <TableCell align=\"center\">Correct</TableCell>\n              <TableCell align=\"center\">Incorrect</TableCell>\n              <TableCell align=\"center\">Hints</TableCell>\n              <TableCell align=\"center\">Fifty hints</TableCell>\n            </TableRow>\n          </TableHead>\n          {loading ? (\n            <CircularProgress className=\"table-loading\" />\n          ) : (\n            <TableBody>\n              {sortedRows.map((row) => (\n                <TableRow\n                  key={row.name}\n                  sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n                >\n                  <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                    {moment(new Date(row.date.toDate())).calendar()}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <span className=\"col-category\">{row.category} </span>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <CircularProgressWithLabel value={(row.correctCount/(row.correctCount + row.wrongCount))*100} />\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <span className=\"correct-count\">{row.correctCount}</span>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <span className=\"wrong-count\">{row.wrongCount}</span>\n                  </TableCell>\n                  <TableCell align=\"center\">{row.hintsCount}</TableCell>\n                  <TableCell align=\"center\">{row.hints50Count}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          )}\n        </Table>\n      </TableContainer>\n      <ul className=\"links\">\n        <Link to=\"/\">Back to Home</Link>\n        <Link to=\"/play/category\">Categories</Link>\n      </ul>\n    </>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizHistory);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}