{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\liranhaim\\\\Desktop\\\\MotoProg_H\\\\src\\\\components\\\\quiz\\\\Play.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { connect } from \"react-redux\";\nimport { mapStateToProps, mapDispatchToProps } from \"../../store\";\nimport { playSound, sounds } from \"../../utils/sounds\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport Stack from \"@mui/material/Stack\";\nimport { Box, Button, ButtonBase, CircularProgress, Typography } from \"@mui/material\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport { useEffect, useState } from \"react\";\nimport { RatingStars } from \"./RateStars\";\nimport { loadQuestions, loadSortedQuestion } from \"../../utils/questions\";\nimport Resaerch from \"./Research\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst questionTime = 120; // 2 minutes\nconst categoriesData = [];\nfunction shuffleArrayInChunks(arr, chunkSize) {\n  for (let i = 0; i < arr.length; i += chunkSize) {\n    // Get the subarray of `chunkSize` elements from the current position\n    const chunk = arr.slice(i, i + chunkSize);\n    // Shuffle the elements in the chunk\n    shuffle(chunk);\n    // Replace the original elements with the shuffled elements\n    arr.splice(i, chunkSize, ...chunk);\n  }\n}\nfunction shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\nfunction RateModal(_ref) {\n  let {\n    onSubmit\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    className: classnames(\"rate-modal\"),\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      className: \"rate-modal-blur\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Question review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RatingStars, {\n        onSubmit: onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_c = RateModal;\nfunction Timer(_ref2) {\n  _s();\n  let {\n    totalSeconds,\n    onEnd\n  } = _ref2;\n  const [count, setCount] = useState(totalSeconds);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCount(count - 1);\n      if (count <= 0) {\n        clearInterval(intervalId);\n        onEnd();\n      }\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, [count, totalSeconds, onEnd]);\n  const minutes = Math.floor(count / 60);\n  const seconds = count % 60;\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    direction: \"row\",\n    className: \"timer\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: [minutes, \":\", seconds.toString().padStart(2, \"0\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"mdi mdi-clock-outline mdi-24px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(Timer, \"HhYqTsBIpTqBYaxcdJp+GD2fW6A=\");\n_c2 = Timer;\nfunction Play(props) {\n  _s2();\n  const navigate = useNavigate();\n  const urlSplit = window.location.href.split(\"/\");\n  const questionSet = urlSplit[urlSplit.length - 1];\n  const [counter, setCounter] = useState(0);\n  const [userRateCount, setUserCount] = useState(0);\n  const [globalRateCounter, setGlobalCounter] = useState(0);\n  const [questions, setQuestions] = useState([]);\n  const [question, setQuestion] = useState(null);\n  const [rating, setRating] = useState({});\n  const [questionIdx, setQuestionIdx] = useState(0);\n  const [showRateModal, setShowRateModal] = useState(false);\n  const [HideIndexes, setHideIndexes] = useState([]);\n  const [timerSeconds, setTImerSeconds] = useState(questionTime);\n  const [showResearch, setShowResearch] = useState(false);\n  const [stats, setStats] = useState({\n    numberOfQuestions: 0,\n    numberOfAnsweredQuestions: 0,\n    correctAnswers: 0,\n    wrongAnswers: 0,\n    fiftyFiftyUsed: 0,\n    userRate: [],\n    globalRate: [],\n    hintsUsed: 0\n  });\n  function QuizName() {\n    const urlSplit = window.location.href.split(\"/\");\n    const questionSet = urlSplit[urlSplit.length - 1];\n    switch (questionSet) {\n      case \"Python\":\n        return \"Python\";\n        break;\n      case \"Data\":\n        return \"Data Structure \";\n        break;\n      case \"OOP\":\n        return \"OOP\";\n        break;\n      case \"Operation\":\n        return \"Operation Systems\";\n        break;\n      case \"Linux\":\n        return \"Linux\";\n        break;\n      case \"General\":\n        return \"General Questions\";\n        break;\n        return \"Quiz\";\n    }\n  }\n\n  // const question = questions[questionIdx]\n  const [loading, setLoading] = useState(true);\n  async function loadRating() {\n    if (!question) return;\n    const res = await props.getRating(question.id);\n    const payload = res.payload;\n    setRating(payload !== null && payload !== void 0 ? payload : null);\n    setLoading(false);\n  }\n  // The function checks if a research question should be presented to the user\n  function countUserRate(ratePrecent, globalRate) {\n    setCounter(counter => counter + 1);\n    setUserCount(userRateCount => userRateCount + ratePrecent);\n    setGlobalCounter(globalRateCounter => globalRateCounter + globalRate);\n\n    //After 3 questions a check is made if the user rated the questions lower than their overall rating\n    if (counter == 2) {\n      setCounter(counter => 0);\n      if (userRateCount < globalRateCounter) {\n        console.log(`need return true`, globalRateCounter - userRateCount);\n        setUserCount(userRateCount => 0);\n        setGlobalCounter(globalRateCounter => 0);\n        return true;\n      }\n    }\n    return false;\n  }\n  async function onRate(rate) {\n    var _ref3;\n    const userRate = (_ref3 = [...props.rate.userRate]) !== null && _ref3 !== void 0 ? _ref3 : [];\n    userRate.push({\n      rate: rate,\n      userEmail: props.user.email\n    });\n    const ratesCount = props.rate.ratesCount;\n    const ratesSum = props.rate.ratesSum;\n    console.log(`rate =>`, rate);\n    console.log(\"ratesCount =>\", ratesCount);\n    console.log(\"ratesSum =>\", ratesSum);\n    console.log(`newRatesCount: ${ratesCount ? ratesCount + 1 : 1}`);\n    const newRate = {\n      questionId: question.id,\n      userRate: userRate,\n      ratesCount: ratesCount ? ratesCount + 1 : 1,\n      ratesSum: ratesSum ? ratesSum + rate : rate\n    };\n    console.log(\"newRate => \", newRate);\n\n    // Check motivation\n    const ratePercent = rate / 5 * 100;\n    stats.userRate.push(ratePercent);\n    const globalRatePercent = props.rate.ratesSum / (props.rate.ratesCount * 5) * 100;\n    stats.globalRate.push(globalRatePercent);\n    setTimeout(() => {\n      // RateStars has some bug that prepregate the event so it fix it\n      setShowRateModal(false);\n    }, 100);\n\n    //if (ratePercent && globalRatePercent && ratePercent < globalRatePercent) {\n    if (countUserRate(ratePercent, globalRatePercent)) {\n      setShowResearch(true);\n    }\n    if (ratesCount !== null && ratesSum) {\n      // update\n      const res = await props.updateRating(newRate);\n    } else {\n      // create\n      const res = await props.addRating(newRate);\n    }\n  }\n  async function loadSortedQuestions() {\n    const questions = loadQuestions(questionSet);\n    const ratings = await Promise.all(questions.map(async q => {\n      const id = q.id;\n      const res = await props.getRating(id);\n      const payload = res.payload;\n      const ratesCount = (payload === null || payload === void 0 ? void 0 : payload.ratesCount) || 0;\n      const ratesSum = (payload === null || payload === void 0 ? void 0 : payload.ratesSum) || 0;\n      const ratePercent = ratesSum <= 0 ? 0 : ratesSum / (ratesCount * 5) * 100;\n      return {\n        ratePercent: ratePercent,\n        id: id\n      };\n    }));\n    questions.sort((a, b) => {\n      var _ratings$find, _ratings$find2;\n      const ratingA = ((_ratings$find = ratings.find(r => r.id === a.id)) === null || _ratings$find === void 0 ? void 0 : _ratings$find.ratePercent) || 0;\n      const ratingB = ((_ratings$find2 = ratings.find(r => r.id === b.id)) === null || _ratings$find2 === void 0 ? void 0 : _ratings$find2.ratePercent) || 0;\n      return ratingB - ratingA;\n    });\n    shuffleArrayInChunks(questions, 10);\n    return questions;\n  }\n  async function init() {\n    const data = JSON.parse(localStorage.getItem(\"user\"));\n    props.getUser(data);\n    const questions = await loadSortedQuestions();\n    setStats(prev => ({\n      ...prev,\n      numberOfQuestions: questions.length\n    }));\n    setQuestions(questions);\n    setQuestion(questions[questionIdx]);\n    setLoading(false);\n    console.log(`questions =>`, questions);\n  }\n  useEffect(() => {\n    init();\n  }, []);\n  useEffect(() => {\n    console.log(\"stats => \", stats);\n    loadRating();\n    setHideIndexes([]);\n  }, [questionIdx]);\n  function onAnswer(result) {\n    if (result) {\n      // Correct\n      setStats(prev => ({\n        ...prev,\n        correctAnswers: prev.correctAnswers + 1\n      }));\n      playSound(sounds.correctNotification);\n      toast.success(\"Correct!\", {\n        autoClose: 350,\n        pauseOnHover: false\n      });\n    } else {\n      // wrong\n      setStats(prev => ({\n        ...prev,\n        wrongAnswers: prev.wrongAnswers + 1\n      }));\n      playSound(sounds.wrongNotification);\n      toast.error(\"Wrong answer\", {\n        autoClose: 350,\n        pauseOnHover: false\n      });\n    }\n    setStats(prev => ({\n      ...prev,\n      numberOfAnsweredQuestions: prev.numberOfAnsweredQuestions + 1\n    }));\n    if (questions.length > 0 && questionIdx + 1 >= questions.length) {\n      // end game\n      endGame({\n        ...stats,\n        numberOfAnsweredQuestions: stats.numberOfAnsweredQuestions + 1\n      });\n      return;\n    }\n    setQuestionIdx(questionIdx + 1);\n    setQuestion(questions[questionIdx + 1]);\n    props.getRating(question.id);\n    setShowRateModal(true);\n  }\n  function endGame(stats) {\n    navigate(\"/play/quizSummary\", {\n      //state: { ...stats, category: questionSet },\n      state: {\n        ...stats,\n        category: QuizName()\n      }\n    });\n  }\n  useEffect(() => {\n    // check scores\n    // if (questions.length > 0 && (questionIdx + 1 >= questions.length)) { // end\n    //     endGame()\n    // }\n  }, [stats]);\n  function onPrev() {\n    playSound(sounds.buttonSound);\n    setQuestionIdx(questionIdx - 1);\n    setQuestion(questions[questionIdx - 1]);\n  }\n  function onNext() {\n    playSound(sounds.buttonSound);\n    setQuestionIdx(questionIdx + 1);\n    setQuestion(questions[questionIdx + 1]);\n  }\n  function onQuit() {\n    playSound(sounds.buttonSound);\n    endGame(stats);\n  }\n  function calcScore() {\n    return parseInt(stats.correctAnswers / stats.numberOfQuestions * 100);\n  }\n  function enableHint(n) {\n    const answer = questions[questionIdx].answer;\n    const answerIdx = questions.findIndex(q => q.answer === answer);\n    const wrongIdxs = [\"A\", \"B\", \"C\", \"D\"].map((c, i) => {\n      const option = question[`option${c}`];\n      return option && answer !== option ? i : -1;\n    }).filter(i => i > -1);\n    setHideIndexes(wrongIdxs.slice(0, n));\n  }\n  console.log(\"props.rate => \", props.rate);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        sx: {\n          width: \"100vw\",\n          height: \"100vh\",\n          background: \"none\",\n          position: \"absolute\"\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: \"5em\",\n          sx: {\n            color: \"#54b5df\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        className: classnames(\"bg-blur\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showRateModal && /*#__PURE__*/_jsxDEV(RateModal, {\n      onSubmit: onRate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 25\n    }, this), showResearch && /*#__PURE__*/_jsxDEV(Resaerch, {\n      onFinish: () => setShowResearch(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      className: classnames(\"bg-blur\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      className: classnames(\"play\"),\n      children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        className: classnames(\"game\"),\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classnames(\"title\"),\n          variant: \"h3\",\n          textAlign: \"center\",\n          children: QuizName()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          className: classnames(\"hints\"),\n          children: [/*#__PURE__*/_jsxDEV(ButtonBase, {\n            onClick: () => {\n              setStats(prev => ({\n                ...prev,\n                hintsUsed: prev.hintsUsed + 1\n              }));\n              enableHint(1);\n            },\n            className: \"mdi mdi-lightbulb-on-outline mdi-24px lifeline-icon\",\n            component: \"span\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"column\",\n            className: classnames(\"info\"),\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              children: [questionIdx + 1, \" of \", questions.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"100%\",\n                height: \"100px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n                variant: \"determinate\",\n                value: (questionIdx + 1) / questions.length * 100,\n                style: {\n                  height: \"10px\",\n                  width: \"250px\",\n                  margin: \"auto\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: [\"Score: \", calcScore()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonBase, {\n            onClick: () => {\n              setStats(prev => ({\n                ...prev,\n                fiftyFiftyUsed: prev.fiftyFiftyUsed + 1\n              }));\n              enableHint(2);\n            },\n            className: \"mdi mdi-set-center mdi-24px lifeline-icon\",\n            component: \"span\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          className: classnames(\"question\"),\n          children: question.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answers-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classnames(\"answers\"),\n            children: [\"A\", \"B\", \"C\", \"D\"].map((c, i) => {\n              if (HideIndexes.includes(i)) return;\n              const option = question[`option${c}`];\n              if (!option) return; // don't render\n              return /*#__PURE__*/_jsxDEV(Stack, {\n                className: classnames(\"answer\"),\n                children: /*#__PURE__*/_jsxDEV(ButtonBase, {\n                  onClick: () => {\n                    onAnswer(option === question.answer);\n                  },\n                  className: classnames(\"answer-content\"),\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    className: classnames(\"answer-text\"),\n                    children: option\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 429,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 423,\n                  columnNumber: 21\n                }, this)\n              }, c, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          className: classnames(\"controls\"),\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              \"&.MuiButton-contained.Mui-disabled\": {\n                background: \"gray\",\n                opacity: 0.5\n              }\n            },\n            onClick: onPrev,\n            disabled: questionIdx === 0,\n            className: classnames(\"prev-btn\"),\n            variant: \"contained\",\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              \"&.MuiButton-contained.Mui-disabled\": {\n                background: \"gray\",\n                opacity: 0.5\n              }\n            },\n            onClick: onNext,\n            disabled: questionIdx === questions.length - 1,\n            variant: \"contained\",\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onQuit,\n            variant: \"contained\",\n            children: \"Quit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s2(Play, \"1BvoNRVlgueZNWNYIw6CkP9FO7A=\", false, function () {\n  return [useNavigate];\n});\n_c3 = Play;\nexport default connect(mapStateToProps, mapDispatchToProps)(Play);\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"RateModal\");\n$RefreshReg$(_c2, \"Timer\");\n$RefreshReg$(_c3, \"Play\");","map":{"version":3,"names":["connect","mapStateToProps","mapDispatchToProps","playSound","sounds","ToastContainer","toast","useLocation","useNavigate","classnames","Stack","Box","Button","ButtonBase","CircularProgress","Typography","LinearProgress","useEffect","useState","RatingStars","loadQuestions","loadSortedQuestion","Resaerch","questionTime","categoriesData","shuffleArrayInChunks","arr","chunkSize","i","length","chunk","slice","shuffle","splice","array","j","Math","floor","random","RateModal","onSubmit","Timer","totalSeconds","onEnd","count","setCount","intervalId","setInterval","clearInterval","minutes","seconds","toString","padStart","Play","props","navigate","urlSplit","window","location","href","split","questionSet","counter","setCounter","userRateCount","setUserCount","globalRateCounter","setGlobalCounter","questions","setQuestions","question","setQuestion","rating","setRating","questionIdx","setQuestionIdx","showRateModal","setShowRateModal","HideIndexes","setHideIndexes","timerSeconds","setTImerSeconds","showResearch","setShowResearch","stats","setStats","numberOfQuestions","numberOfAnsweredQuestions","correctAnswers","wrongAnswers","fiftyFiftyUsed","userRate","globalRate","hintsUsed","QuizName","loading","setLoading","loadRating","res","getRating","id","payload","countUserRate","ratePrecent","console","log","onRate","rate","push","userEmail","user","email","ratesCount","ratesSum","newRate","questionId","ratePercent","globalRatePercent","setTimeout","updateRating","addRating","loadSortedQuestions","ratings","Promise","all","map","q","sort","a","b","ratingA","find","r","ratingB","init","data","JSON","parse","localStorage","getItem","getUser","prev","onAnswer","result","correctNotification","success","autoClose","pauseOnHover","wrongNotification","error","endGame","state","category","onPrev","buttonSound","onNext","onQuit","calcScore","parseInt","enableHint","n","answer","answerIdx","findIndex","wrongIdxs","c","option","filter","width","height","background","position","color","margin","includes","opacity"],"sources":["C:/Users/liranhaim/Desktop/MotoProg_H/src/components/quiz/Play.js"],"sourcesContent":["import { connect } from \"react-redux\";\nimport { mapStateToProps, mapDispatchToProps } from \"../../store\";\nimport { playSound, sounds } from \"../../utils/sounds\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\nimport Stack from \"@mui/material/Stack\";\nimport {\n  Box,\n  Button,\n  ButtonBase,\n  CircularProgress,\n  Typography,\n} from \"@mui/material\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport { useEffect, useState } from \"react\";\nimport { RatingStars } from \"./RateStars\";\n\nimport { loadQuestions, loadSortedQuestion } from \"../../utils/questions\";\nimport Resaerch from \"./Research\";\n\nconst questionTime = 120; // 2 minutes\nconst categoriesData = [];\n\nfunction shuffleArrayInChunks(arr, chunkSize) {\n  for (let i = 0; i < arr.length; i += chunkSize) {\n    // Get the subarray of `chunkSize` elements from the current position\n    const chunk = arr.slice(i, i + chunkSize);\n    // Shuffle the elements in the chunk\n    shuffle(chunk);\n    // Replace the original elements with the shuffled elements\n    arr.splice(i, chunkSize, ...chunk);\n  }\n}\n\nfunction shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\n\nfunction RateModal({ onSubmit }) {\n  return (\n    <Stack className={classnames(\"rate-modal\")}>\n      <Stack className=\"rate-modal-blur\" />\n      <Stack className=\"modal\">\n        <Typography variant=\"h4\">Question review</Typography>\n        <RatingStars onSubmit={onSubmit} />\n      </Stack>\n    </Stack>\n  );\n}\n\nfunction Timer({ totalSeconds, onEnd }) {\n  const [count, setCount] = useState(totalSeconds);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCount(count - 1);\n      if (count <= 0) {\n        clearInterval(intervalId);\n        onEnd();\n      }\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, [count, totalSeconds, onEnd]);\n\n  const minutes = Math.floor(count / 60);\n  const seconds = count % 60;\n\n  return (\n    <Stack direction=\"row\" className=\"timer\">\n      <Typography>\n        {minutes}:{seconds.toString().padStart(2, \"0\")}\n      </Typography>\n      <span className=\"mdi mdi-clock-outline mdi-24px\" />\n    </Stack>\n  );\n}\n\nfunction Play(props) {\n  const navigate = useNavigate();\n  const urlSplit = window.location.href.split(\"/\");\n  const questionSet = urlSplit[urlSplit.length - 1];\n\n  const [counter, setCounter] = useState(0);\n  const [userRateCount, setUserCount] = useState(0);\n  const [globalRateCounter, setGlobalCounter] = useState(0);\n  const [questions, setQuestions] = useState([]);\n  const [question, setQuestion] = useState(null);\n  const [rating, setRating] = useState({});\n\n  const [questionIdx, setQuestionIdx] = useState(0);\n  const [showRateModal, setShowRateModal] = useState(false);\n  const [HideIndexes, setHideIndexes] = useState([]);\n  const [timerSeconds, setTImerSeconds] = useState(questionTime);\n  const [showResearch, setShowResearch] = useState(false);\n  const [stats, setStats] = useState({\n    numberOfQuestions: 0,\n    numberOfAnsweredQuestions: 0,\n    correctAnswers: 0,\n    wrongAnswers: 0,\n    fiftyFiftyUsed: 0,\n    userRate: [],\n    globalRate: [],\n    hintsUsed: 0,\n  });\n\n  function QuizName() {\n    const urlSplit = window.location.href.split(\"/\");\n    const questionSet = urlSplit[urlSplit.length - 1];\n    switch (questionSet) {\n      case \"Python\":\n        return \"Python\";\n        break;\n      case \"Data\":\n        return \"Data Structure \";\n        break;\n      case \"OOP\":\n        return \"OOP\";\n        break;\n      case \"Operation\":\n        return \"Operation Systems\";\n        break;\n      case \"Linux\":\n        return \"Linux\";\n        break;\n      case \"General\":\n        return \"General Questions\";\n        break;\n        return \"Quiz\";\n    }\n  }\n\n  // const question = questions[questionIdx]\n  const [loading, setLoading] = useState(true);\n\n  async function loadRating() {\n    if (!question) return;\n    const res = await props.getRating(question.id);\n    const payload = res.payload;\n    setRating(payload ?? null);\n    setLoading(false);\n  }\n  // The function checks if a research question should be presented to the user\n  function countUserRate(ratePrecent, globalRate) {\n    setCounter((counter) => counter + 1);\n    setUserCount((userRateCount) => userRateCount + ratePrecent);\n    setGlobalCounter((globalRateCounter) => globalRateCounter + globalRate);\n\n    //After 3 questions a check is made if the user rated the questions lower than their overall rating\n    if (counter == 2) {\n      setCounter((counter) => 0);\n      if (userRateCount < globalRateCounter) {\n        console.log(`need return true`, globalRateCounter - userRateCount);\n        setUserCount((userRateCount) => 0);\n        setGlobalCounter((globalRateCounter) => 0);\n        return true;\n      }\n    }\n    return false;\n  }\n  async function onRate(rate) {\n    const userRate = [...props.rate.userRate] ?? [];\n    userRate.push({\n      rate: rate,\n      userEmail: props.user.email,\n    });\n    const ratesCount = props.rate.ratesCount;\n    const ratesSum = props.rate.ratesSum;\n    console.log(`rate =>`, rate);\n    console.log(\"ratesCount =>\", ratesCount);\n    console.log(\"ratesSum =>\", ratesSum);\n    console.log(`newRatesCount: ${ratesCount ? ratesCount + 1 : 1}`);\n\n    const newRate = {\n      questionId: question.id,\n      userRate: userRate,\n      ratesCount: ratesCount ? ratesCount + 1 : 1,\n      ratesSum: ratesSum ? ratesSum + rate : rate,\n    };\n    console.log(\"newRate => \", newRate);\n\n    // Check motivation\n    const ratePercent = (rate / 5) * 100;\n    stats.userRate.push(ratePercent);\n    const globalRatePercent =\n      (props.rate.ratesSum / (props.rate.ratesCount * 5)) * 100;\n    stats.globalRate.push(globalRatePercent);\n\n    setTimeout(() => {\n      // RateStars has some bug that prepregate the event so it fix it\n      setShowRateModal(false);\n    }, 100);\n\n    //if (ratePercent && globalRatePercent && ratePercent < globalRatePercent) {\n    if (countUserRate(ratePercent, globalRatePercent)) {\n      setShowResearch(true);\n    }\n    if (ratesCount !== null && ratesSum) {\n      // update\n      const res = await props.updateRating(newRate);\n    } else {\n      // create\n      const res = await props.addRating(newRate);\n    }\n  }\n\n  async function loadSortedQuestions() {\n    const questions = loadQuestions(questionSet);\n    const ratings = await Promise.all(\n      questions.map(async (q) => {\n        const id = q.id;\n        const res = await props.getRating(id);\n        const payload = res.payload;\n        const ratesCount = payload?.ratesCount || 0;\n        const ratesSum = payload?.ratesSum || 0;\n\n        const ratePercent =\n          ratesSum <= 0 ? 0 : (ratesSum / (ratesCount * 5)) * 100;\n        return { ratePercent: ratePercent, id: id };\n      })\n    );\n    questions.sort((a, b) => {\n      const ratingA = ratings.find((r) => r.id === a.id)?.ratePercent || 0;\n      const ratingB = ratings.find((r) => r.id === b.id)?.ratePercent || 0;\n      return ratingB - ratingA;\n    });\n    shuffleArrayInChunks(questions, 10);\n    return questions;\n  }\n\n  async function init() {\n    const data = JSON.parse(localStorage.getItem(\"user\"));\n    props.getUser(data);\n    const questions = await loadSortedQuestions();\n    setStats((prev) => ({ ...prev, numberOfQuestions: questions.length }));\n    setQuestions(questions);\n    setQuestion(questions[questionIdx]);\n    setLoading(false);\n    console.log(`questions =>`, questions);\n  }\n  useEffect(() => {\n    init();\n  }, []);\n\n  useEffect(() => {\n    console.log(\"stats => \", stats);\n    loadRating();\n    setHideIndexes([]);\n  }, [questionIdx]);\n\n  function onAnswer(result) {\n    if (result) {\n      // Correct\n      setStats((prev) => ({\n        ...prev,\n        correctAnswers: prev.correctAnswers + 1,\n      }));\n      playSound(sounds.correctNotification);\n      toast.success(\"Correct!\", { autoClose: 350, pauseOnHover: false });\n    } else {\n      // wrong\n      setStats((prev) => ({ ...prev, wrongAnswers: prev.wrongAnswers + 1 }));\n      playSound(sounds.wrongNotification);\n      toast.error(\"Wrong answer\", { autoClose: 350, pauseOnHover: false });\n    }\n\n    setStats((prev) => ({\n      ...prev,\n      numberOfAnsweredQuestions: prev.numberOfAnsweredQuestions + 1,\n    }));\n\n    if (questions.length > 0 && questionIdx + 1 >= questions.length) {\n      // end game\n      endGame({\n        ...stats,\n        numberOfAnsweredQuestions: stats.numberOfAnsweredQuestions + 1,\n      });\n      return;\n    }\n    setQuestionIdx(questionIdx + 1);\n    setQuestion(questions[questionIdx + 1]);\n    props.getRating(question.id);\n    setShowRateModal(true);\n  }\n\n  function endGame(stats) {\n    navigate(\"/play/quizSummary\", {\n      //state: { ...stats, category: questionSet },\n      state: { ...stats, category: QuizName()  },\n    });\n  }\n\n  useEffect(() => {\n    // check scores\n    // if (questions.length > 0 && (questionIdx + 1 >= questions.length)) { // end\n    //     endGame()\n    // }\n  }, [stats]);\n\n  function onPrev() {\n    playSound(sounds.buttonSound);\n    setQuestionIdx(questionIdx - 1);\n    setQuestion(questions[questionIdx - 1]);\n  }\n  function onNext() {\n    playSound(sounds.buttonSound);\n    setQuestionIdx(questionIdx + 1);\n    setQuestion(questions[questionIdx + 1]);\n  }\n\n  function onQuit() {\n    playSound(sounds.buttonSound);\n    endGame(stats);\n  }\n\n  function calcScore() {\n    return parseInt((stats.correctAnswers / stats.numberOfQuestions) * 100);\n  }\n\n  function enableHint(n) {\n    const answer = questions[questionIdx].answer;\n    const answerIdx = questions.findIndex((q) => q.answer === answer);\n    const wrongIdxs = [\"A\", \"B\", \"C\", \"D\"]\n      .map((c, i) => {\n        const option = question[`option${c}`];\n        return option && answer !== option ? i : -1;\n      })\n      .filter((i) => i > -1);\n    setHideIndexes(wrongIdxs.slice(0, n));\n  }\n\n  console.log(\"props.rate => \", props.rate);\n\n  if (loading) {\n    return (\n      <>\n        <Stack\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          sx={{\n            width: \"100vw\",\n            height: \"100vh\",\n            background: \"none\",\n            position: \"absolute\",\n          }}\n        >\n          <CircularProgress size=\"5em\" sx={{ color: \"#54b5df\" }} />\n        </Stack>\n\n        <Stack className={classnames(\"bg-blur\")}></Stack>\n      </>\n    );\n  }\n\n  return (\n    <>\n      {showRateModal && <RateModal onSubmit={onRate} />}\n      {showResearch && <Resaerch onFinish={() => setShowResearch(false)} />}\n      <Stack className={classnames(\"bg-blur\")} />\n      <Stack className={classnames(\"play\")}>\n        <ToastContainer />\n        <Stack className={classnames(\"game\")}>\n          <Typography\n            className={classnames(\"title\")}\n            variant=\"h3\"\n            textAlign=\"center\"\n          >\n            {QuizName()}\n          </Typography>\n\n          <Stack direction=\"row\" className={classnames(\"hints\")}>\n            <ButtonBase\n              onClick={() => {\n                setStats((prev) => ({\n                  ...prev,\n                  hintsUsed: prev.hintsUsed + 1,\n                }));\n                enableHint(1);\n              }}\n              className=\"mdi mdi-lightbulb-on-outline mdi-24px lifeline-icon\"\n              component=\"span\"\n            />\n            <Stack direction=\"column\" className={classnames(\"info\")}>\n              <Typography>\n                {questionIdx + 1} of {questions.length}\n              </Typography>\n              <div style={{ width: \"100%\", height: \"100px\" }}>\n                <LinearProgress\n                  variant=\"determinate\"\n                  value={((questionIdx + 1) / questions.length) * 100}\n                  style={{ height: \"10px\", width: \"250px\", margin: \"auto\" }}\n                />\n              </div>\n              <Typography variant=\"h6\">Score: {calcScore()}</Typography>\n              {/* <Timer onEnd={() => { }} totalSeconds={timerSeconds} /> */}\n            </Stack>\n            <ButtonBase\n              onClick={() => {\n                setStats((prev) => ({\n                  ...prev,\n                  fiftyFiftyUsed: prev.fiftyFiftyUsed + 1,\n                }));\n                enableHint(2);\n              }}\n              className=\"mdi mdi-set-center mdi-24px lifeline-icon\"\n              component=\"span\"\n            />\n          </Stack>\n          <Typography variant=\"h6\" className={classnames(\"question\")}>\n            {question.question}\n          </Typography>\n          <div className=\"answers-container\">\n            <div className={classnames(\"answers\")}>\n              {[\"A\", \"B\", \"C\", \"D\"].map((c, i) => {\n                if (HideIndexes.includes(i)) return;\n                const option = question[`option${c}`];\n                if (!option) return; // don't render\n                return (\n                  <Stack key={c} className={classnames(\"answer\")}>\n                    <ButtonBase\n                      onClick={() => {\n                        onAnswer(option === question.answer);\n                      }}\n                      className={classnames(\"answer-content\")}\n                    >\n                      <Typography className={classnames(\"answer-text\")}>\n                        {option}\n                      </Typography>\n                    </ButtonBase>\n                  </Stack>\n                );\n              })}\n            </div>\n          </div>\n          <Stack direction=\"row\" className={classnames(\"controls\")}>\n            <Button\n              sx={{\n                \"&.MuiButton-contained.Mui-disabled\": {\n                  background: \"gray\",\n                  opacity: 0.5,\n                },\n              }}\n              onClick={onPrev}\n              disabled={questionIdx === 0}\n              className={classnames(\"prev-btn\")}\n              variant=\"contained\"\n            >\n              Previous\n            </Button>\n            <Button\n              sx={{\n                \"&.MuiButton-contained.Mui-disabled\": {\n                  background: \"gray\",\n                  opacity: 0.5,\n                },\n              }}\n              onClick={onNext}\n              disabled={questionIdx === questions.length - 1}\n              variant=\"contained\"\n            >\n              Next\n            </Button>\n            <Button onClick={onQuit} variant=\"contained\">\n              Quit\n            </Button>\n          </Stack>\n        </Stack>\n      </Stack>\n    </>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Play);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}