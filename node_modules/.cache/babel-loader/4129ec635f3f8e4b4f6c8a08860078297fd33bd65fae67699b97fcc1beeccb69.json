{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\liranhaim\\\\Desktop\\\\MotoProg_H\\\\src\\\\components\\\\quiz\\\\LineComponent.js\",\n  _s = $RefreshSig$();\nimport React, { Component, Fragment, useEffect, useState } from 'react';\nimport Chart from \"react-apexcharts\";\nimport { Helmet } from 'react-helmet';\nimport { Link, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LineComponent() {\n  _s();\n  const location = useLocation();\n  const [state, setState] = useState({\n    score: 0,\n    numberOfQuestions: 0,\n    numberOfAnsweredQuestions: 0,\n    correctAnswers: 0,\n    wrongAnswers: 0,\n    hintsUsed: 0,\n    userRate: [],\n    globalRate: [],\n    fiftyFiftyUsed: 0\n  });\n  useEffect(() => {\n    const {\n      state\n    } = location;\n    if (state) {\n      setState({\n        score: state.correctAnswers / state.numberOfQuestions * 100,\n        numberOfQuestions: state.numberOfQuestions,\n        numberOfAnsweredQuestions: state.numberOfAnsweredQuestions,\n        correctAnswers: state.correctAnswers,\n        wrongAnswers: state.wrongAnswers,\n        hintsUsed: state.hintsUsed,\n        userRate: state.userRate,\n        globalRate: state.globalRate,\n        fiftyFiftyUsed: state.fiftyFiftyUsed\n      });\n    }\n  }, []);\n  const userArr = state.userRate.map(num => Math.round(num / 10) * 10);\n  const globalArr = state.globalRate.map(num => Math.round(num / 10) * 10);\n  const createLine = {\n    options: {\n      colors: [\"#E91E63\", \"#FF9800\"],\n      chart: {\n        id: \"basic-bar\"\n      },\n      xaxis: {\n        categories: [],\n        labels: {\n          show: false\n        }\n      }\n    },\n    series: [{\n      name: \"Users Rating\",\n      data: globalArr\n    }, {\n      name: \"Your Rating \",\n      data: userArr\n    }]\n  };\n  return (\n    /*#__PURE__*/\n    // <div className=\"App\">\n    //   <div className=\"row\">\n    //     <div className=\"col-4\">\n    //       <Chart\n    //         options={createLine.options}\n    //         series={createLine.series}\n    //         type=\"line\"\n    //         width=\"450\"\n    //       />\n    //     </div>  \n    //   </div>\n    // </div>\n    _jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mixed-chart\",\n          children: /*#__PURE__*/_jsxDEV(Chart, {\n            options: createLine.options,\n            series: createLine.series,\n            type: \"bar\",\n            width: \"480\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(LineComponent, \"FdwHFBrWrPdxKKRBRX6JQDR7GpQ=\", false, function () {\n  return [useLocation];\n});\n_c = LineComponent;\nexport default LineComponent;\n\n// bar\n// line\n// area\n// radar\n// histogram\n// scatter\n// heatmap\nvar _c;\n$RefreshReg$(_c, \"LineComponent\");","map":{"version":3,"names":["React","Component","Fragment","useEffect","useState","Chart","Helmet","Link","useLocation","LineComponent","location","state","setState","score","numberOfQuestions","numberOfAnsweredQuestions","correctAnswers","wrongAnswers","hintsUsed","userRate","globalRate","fiftyFiftyUsed","userArr","map","num","Math","round","globalArr","createLine","options","colors","chart","id","xaxis","categories","labels","show","series","name","data"],"sources":["C:/Users/liranhaim/Desktop/MotoProg_H/src/components/quiz/LineComponent.js"],"sourcesContent":["import React, { Component, Fragment, useEffect, useState } from 'react';\nimport Chart  from \"react-apexcharts\";\nimport { Helmet } from 'react-helmet';\nimport { Link, useLocation } from 'react-router-dom';\n\n\nfunction LineComponent() {\n    const location = useLocation()\n    const [state, setState] = useState({\n      score: 0,\n      numberOfQuestions: 0,\n      numberOfAnsweredQuestions: 0,\n      correctAnswers: 0,\n      wrongAnswers: 0,\n      hintsUsed: 0,\n      userRate: [],\n      globalRate: [],\n      fiftyFiftyUsed: 0\n    });\n  \n    useEffect(() => {\n      const { state } = location\n      if (state) {\n        setState({\n          score: state.correctAnswers / state.numberOfQuestions * 100,\n          numberOfQuestions: state.numberOfQuestions,\n          numberOfAnsweredQuestions: state.numberOfAnsweredQuestions,\n          correctAnswers: state.correctAnswers,\n          wrongAnswers: state.wrongAnswers,\n          hintsUsed: state.hintsUsed,\n          userRate: state.userRate,\n          globalRate: state.globalRate,\n          fiftyFiftyUsed: state.fiftyFiftyUsed\n        });\n      }\n    }, [])\n  const userArr = state.userRate.map(num => Math.round(num / 10) * 10);\n  const globalArr = state.globalRate.map(num => Math.round(num / 10) * 10);\n  const createLine ={\n    options: {\n        colors: [\"#E91E63\", \"#FF9800\"],\n        chart: {\n          id: \"basic-bar\",\n        },\n        xaxis: {\n          categories: [],\n          labels: {\n            show: false,\n          },\n        },\n      },\n      series: [\n        {\n          name: \"Users Rating\",\n          data:  globalArr,\n        },\n        {\n          name: \"Your Rating \",\n          data: userArr,\n        },\n        \n      ],\n    }\n  \n  return (\n    // <div className=\"App\">\n    //   <div className=\"row\">\n    //     <div className=\"col-4\">\n    //       <Chart\n    //         options={createLine.options}\n    //         series={createLine.series}\n    //         type=\"line\"\n    //         width=\"450\"\n    //       />\n    //     </div>  \n    //   </div>\n    // </div>\n    <div className=\"app\">\n        <div className=\"row\">\n          <div className=\"mixed-chart\">\n            <Chart\n              options={createLine.options}\n              series={createLine.series}\n              type=\"bar\"\n              width=\"480\"\n            />\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default LineComponent;\n\n// bar\n// line\n// area\n// radar\n// histogram\n// scatter\n// heatmap"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}