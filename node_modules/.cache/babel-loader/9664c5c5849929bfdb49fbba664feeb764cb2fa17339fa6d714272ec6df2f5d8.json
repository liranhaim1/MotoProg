{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { getDoc, setDoc, doc, updateDoc, getDocs, collection, where } from \"firebase/firestore\";\nimport { firestore } from \"../firebase\";\nexport const getRating = createAsyncThunk(\"appQuestions/getRating\", async questionId => {\n  const snap = await getDoc(doc(firestore, \"ratings\", questionId)); //questionId)) // TODO: change to questionId\n  // console.log(\"getRating => \", snap.data())\n  // localStorage.setItem(\"user\", JSON.stringify({id:id, ...snap.data()}))\n  return snap.data() === undefined ? {\n    questionId: questionId,\n    userRate: [],\n    ratesCount: 0,\n    ratesSum: 0\n  } : snap.data();\n});\nexport const addRating = createAsyncThunk(\"appQuestions/createRating\", async data => {\n  await setDoc(doc(firestore, \"ratings\", data.questionId), {\n    questionId: data.questionId,\n    userRate: data.userRate,\n    ratesCount: data.ratesCount,\n    ratesSum: data.ratesSum\n  });\n  return {\n    questionId: data.questionId,\n    userRate: data.userRate,\n    ratesCount: data.ratesCount,\n    ratesSum: data.ratesSum\n  };\n});\nexport const updateRating = createAsyncThunk(\"appQuestions/updateRating\", async (data, _ref) => {\n  let {\n    dispatch\n  } = _ref;\n  await updateDoc(doc(firestore, \"ratings\", data.questionId), {\n    userRate: data.userRate,\n    ratesCount: data.ratesCount,\n    ratesSum: data.ratesSum\n  });\n  dispatch(getRating(data.id));\n});\nexport const Slice = createSlice({\n  name: \"Ratings\",\n  initialState: {\n    questionId: \"\",\n    userRate: [],\n    ratesCount: 0,\n    ratesSum: 0\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(addRating.fulfilled, (state, action) => {\n      state.questionId = action.payload.questionId;\n      state.userRate = action.payload.userRate;\n      state.ratesCount = action.payload.ratesCount;\n      state.ratesSum = action.payload.ratesSum;\n    }).addCase(getRating.fulfilled, (state, action) => {\n      state.questionId = action.payload.questionId;\n      state.userRate = action.payload.userRate;\n      state.ratesCount = action.payload.ratesCount;\n      state.ratesSum = action.payload.ratesSum;\n    });\n  }\n});\nexport default Slice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","getDoc","setDoc","doc","updateDoc","getDocs","collection","where","firestore","getRating","questionId","snap","data","undefined","userRate","ratesCount","ratesSum","addRating","updateRating","dispatch","id","Slice","name","initialState","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","reducer"],"sources":["C:/Users/liranhaim/Desktop/MotoProg_H/src/features/rating.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport {\n  getDoc,\n  setDoc,\n  doc,\n  updateDoc,\n  getDocs,\n  collection,\n  where,\n} from \"firebase/firestore\";\nimport { firestore } from \"../firebase\";\n\nexport const getRating = createAsyncThunk(\n  \"appQuestions/getRating\",\n  async (questionId) => {\n    const snap = await getDoc(doc(firestore, \"ratings\", questionId)); //questionId)) // TODO: change to questionId\n    // console.log(\"getRating => \", snap.data())\n    // localStorage.setItem(\"user\", JSON.stringify({id:id, ...snap.data()}))\n    return snap.data() === undefined\n      ? {\n          questionId: questionId,\n          userRate: [],\n          ratesCount: 0,\n          ratesSum: 0,\n        }\n      : snap.data();\n  }\n);\n\nexport const addRating = createAsyncThunk(\n  \"appQuestions/createRating\",\n  async (data) => {\n    await setDoc(doc(firestore, \"ratings\", data.questionId), {\n      questionId: data.questionId,\n      userRate: data.userRate,\n      ratesCount: data.ratesCount,\n      ratesSum: data.ratesSum,\n    });\n    return {\n      questionId: data.questionId,\n      userRate: data.userRate,\n      ratesCount: data.ratesCount,\n      ratesSum: data.ratesSum,\n    };\n  }\n);\n\nexport const updateRating = createAsyncThunk(\n  \"appQuestions/updateRating\",\n  async (data, { dispatch }) => {\n    await updateDoc(doc(firestore, \"ratings\", data.questionId), {\n      userRate: data.userRate,\n      ratesCount: data.ratesCount,\n      ratesSum: data.ratesSum,\n    });\n    dispatch(getRating(data.id));\n  }\n);\n\nexport const Slice = createSlice({\n  name: \"Ratings\",\n  initialState: {\n    questionId: \"\",\n    userRate: [],\n    ratesCount: 0,\n    ratesSum: 0,\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(addRating.fulfilled, (state, action) => {\n        state.questionId = action.payload.questionId;\n        state.userRate = action.payload.userRate;\n        state.ratesCount = action.payload.ratesCount;\n        state.ratesSum = action.payload.ratesSum;\n      })\n      .addCase(getRating.fulfilled, (state, action) => {\n        state.questionId = action.payload.questionId;\n        state.userRate = action.payload.userRate;\n        state.ratesCount = action.payload.ratesCount;\n        state.ratesSum = action.payload.ratesSum;\n      });\n  },\n});\n\nexport default Slice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}