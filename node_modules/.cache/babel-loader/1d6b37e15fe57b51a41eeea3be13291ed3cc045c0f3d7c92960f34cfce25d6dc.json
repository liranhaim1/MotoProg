{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport userReducer from \"./features/users\";\nimport rateReducer from \"./features/rating\";\nimport { setUser, updateUser } from \"./features/users\";\nimport rating, { addRating, getRating, updateRating } from \"./features/rating\";\nexport const mapStateToProps = state => {\n  return {\n    user: state.users,\n    rate: state.rates\n  };\n};\nexport const mapDispatchToProps = dispatch => {\n  return {\n    updateUser: data => dispatch(updateUser(data)),\n    getUser: data => dispatch(setUser(data)),\n    getRating: id => dispatch(getRating(id)),\n    addRating: data => dispatch(addRating(data)),\n    updateRating: data => dispatch(updateRating(data))\n  };\n};\nexport const Store = configureStore({\n  reducer: {\n    users: userReducer,\n    rates: rateReducer\n  },\n  middleware: getDefaultMiddleware => {\n    return getDefaultMiddleware({\n      serializableCheck: false\n    });\n  }\n});","map":{"version":3,"names":["configureStore","userReducer","rateReducer","setUser","updateUser","rating","addRating","getRating","updateRating","mapStateToProps","state","user","users","rate","rates","mapDispatchToProps","dispatch","data","getUser","id","Store","reducer","middleware","getDefaultMiddleware","serializableCheck"],"sources":["C:/Users/liranhaim/Desktop/MotoProg_H/src/store.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport userReducer from \"./features/users\";\nimport rateReducer from \"./features/rating\";\nimport { setUser, updateUser } from \"./features/users\";\nimport rating, { addRating, getRating, updateRating } from \"./features/rating\";\n\nexport const mapStateToProps = (state) => {\n  return {\n    user: state.users,\n    rate: state.rates,\n  };\n};\n\nexport const mapDispatchToProps = (dispatch) => {\n  return {\n    updateUser: (data) => dispatch(updateUser(data)),\n    getUser: (data) => dispatch(setUser(data)),\n    getRating: (id) => dispatch(getRating(id)),\n    addRating: (data) => dispatch(addRating(data)),\n    updateRating: (data) => dispatch(updateRating(data)),\n  };\n};\n\nexport const Store = configureStore({\n  reducer: {\n    users: userReducer,\n    rates: rateReducer,\n  },\n  middleware: (getDefaultMiddleware) => {\n    return getDefaultMiddleware({\n      serializableCheck: false,\n    });\n  },\n});\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,WAAW,MAAM,kBAAkB;AAC1C,OAAOC,WAAW,MAAM,mBAAmB;AAC3C,SAASC,OAAO,EAAEC,UAAU,QAAQ,kBAAkB;AACtD,OAAOC,MAAM,IAAIC,SAAS,EAAEC,SAAS,EAAEC,YAAY,QAAQ,mBAAmB;AAE9E,OAAO,MAAMC,eAAe,GAAIC,KAAK,IAAK;EACxC,OAAO;IACLC,IAAI,EAAED,KAAK,CAACE,KAAK;IACjBC,IAAI,EAAEH,KAAK,CAACI;EACd,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAIC,QAAQ,IAAK;EAC9C,OAAO;IACLZ,UAAU,EAAGa,IAAI,IAAKD,QAAQ,CAACZ,UAAU,CAACa,IAAI,CAAC,CAAC;IAChDC,OAAO,EAAGD,IAAI,IAAKD,QAAQ,CAACb,OAAO,CAACc,IAAI,CAAC,CAAC;IAC1CV,SAAS,EAAGY,EAAE,IAAKH,QAAQ,CAACT,SAAS,CAACY,EAAE,CAAC,CAAC;IAC1Cb,SAAS,EAAGW,IAAI,IAAKD,QAAQ,CAACV,SAAS,CAACW,IAAI,CAAC,CAAC;IAC9CT,YAAY,EAAGS,IAAI,IAAKD,QAAQ,CAACR,YAAY,CAACS,IAAI,CAAC;EACrD,CAAC;AACH,CAAC;AAED,OAAO,MAAMG,KAAK,GAAGpB,cAAc,CAAC;EAClCqB,OAAO,EAAE;IACPT,KAAK,EAAEX,WAAW;IAClBa,KAAK,EAAEZ;EACT,CAAC;EACDoB,UAAU,EAAGC,oBAAoB,IAAK;IACpC,OAAOA,oBAAoB,CAAC;MAC1BC,iBAAiB,EAAE;IACrB,CAAC,CAAC;EACJ;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}