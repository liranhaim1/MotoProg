{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\liranhaim\\\\Desktop\\\\MotoProg_H\\\\src\\\\components\\\\quiz\\\\Category.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport { mapStateToProps, mapDispatchToProps } from \"../../store\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Category = () => {\n  _s();\n  const navigate = useNavigate();\n  const handleClick = event => {\n    const category = event.target.textContent;\n    switch (category) {\n      case 'Python':\n        navigate(\"/play/Python\");\n        break;\n      case 'Data Structure':\n        navigate(\"/play/Data\");\n        break;\n      case 'OOP':\n        navigate(\"/play/OOP\");\n        break;\n      case 'Operation Systems':\n        navigate(\"/play/Operation\");\n        break;\n      case 'Linux':\n        navigate(\"/play/Linux\");\n        break;\n      case 'General Questions':\n        navigate(\"/play/General\");\n      case ' Game History':\n        navigate(\"/play/history\");\n        break;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"category\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-blur\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"title roboto\",\n          children: \"Select a category you'd like to test your knowledge on!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: handleClick,\n            children: \"Python\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: handleClick,\n            children: \"Data Structure\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: handleClick,\n            children: \"OOP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: handleClick,\n            children: \"Operation Systems\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: handleClick,\n            children: \"Linux\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: handleClick,\n            children: \"General Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"category\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-blur\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: handleClick,\n          children: \"Game History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Category, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Category;\nexport default connect(mapStateToProps, mapDispatchToProps)(Category);\nvar _c;\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"names":["React","Fragment","Link","useNavigate","Helmet","mapStateToProps","mapDispatchToProps","Category","navigate","handleClick","event","category","target","textContent","connect"],"sources":["C:/Users/liranhaim/Desktop/MotoProg_H/src/components/quiz/Category.js"],"sourcesContent":["import React, { Fragment } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport { mapStateToProps, mapDispatchToProps } from \"../../store\";\n\nconst Category = () => {\n    const navigate = useNavigate();\n\n  const handleClick = (event) => {\n    const category = event.target.textContent;\n    switch(category){\n      case 'Python':\n        navigate(\"/play/Python\");\n        break;\n      case 'Data Structure':\n        navigate(\"/play/Data\");\n        break;\n      case 'OOP':\n        navigate(\"/play/OOP\");\n        break; \n      case 'Operation Systems':\n        navigate(\"/play/Operation\");\n        break; \n      case 'Linux':\n        navigate(\"/play/Linux\");\n        break; \n      case 'General Questions':\n        navigate(\"/play/General\");\n      case ' Game History':\n        navigate(\"/play/history\");\n        break; \n     \n      \n    }\n  };\n  return (\n    <>\n      <div id=\"category\">\n        <div className=\"bg-blur\" />\n        <div className=\"container\">\n          <h3 className=\"title roboto\">\n            Select a category you'd like to test your knowledge on!\n          </h3>\n          <div className=\"grid\">\n            <button className=\"button\" onClick={handleClick}>\n              Python\n            </button>\n            <button className=\"button\" onClick={handleClick}>\n              Data Structure\n            </button>\n            <button className=\"button\" onClick={handleClick}>\n              OOP\n            </button>\n            <button className=\"button\" onClick={handleClick}>\n              Operation Systems\n            </button>\n            <button className=\"button\" onClick={handleClick}>\n              Linux\n            </button>\n            <button className=\"button\" onClick={handleClick}>\n              General Questions\n            </button>\n          </div>\n          \n        </div>\n      </div>\n      <div id=\"category\">\n        <div className=\"bg-blur\" />\n        <div className=\"container\">\n       \n          <div className=\"grid\">\n          </div>\n          <button className=\"button\" onClick={handleClick}>\n              Game History\n            </button>\n        </div>\n      </div>\n    </>\n    \n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Category);\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,SAASC,MAAM,QAAQ,cAAc;AACrC,SAASC,eAAe,EAAEC,kBAAkB,QAAQ,aAAa;AAAC;AAAA;AAElE,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACnB,MAAMC,QAAQ,GAAGL,WAAW,EAAE;EAEhC,MAAMM,WAAW,GAAIC,KAAK,IAAK;IAC7B,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAACC,WAAW;IACzC,QAAOF,QAAQ;MACb,KAAK,QAAQ;QACXH,QAAQ,CAAC,cAAc,CAAC;QACxB;MACF,KAAK,gBAAgB;QACnBA,QAAQ,CAAC,YAAY,CAAC;QACtB;MACF,KAAK,KAAK;QACRA,QAAQ,CAAC,WAAW,CAAC;QACrB;MACF,KAAK,mBAAmB;QACtBA,QAAQ,CAAC,iBAAiB,CAAC;QAC3B;MACF,KAAK,OAAO;QACVA,QAAQ,CAAC,aAAa,CAAC;QACvB;MACF,KAAK,mBAAmB;QACtBA,QAAQ,CAAC,eAAe,CAAC;MAC3B,KAAK,eAAe;QAClBA,QAAQ,CAAC,eAAe,CAAC;QACzB;IAAM;EAIZ,CAAC;EACD,oBACE;IAAA,wBACE;MAAK,EAAE,EAAC,UAAU;MAAA,wBAChB;QAAK,SAAS,EAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG,eAC3B;QAAK,SAAS,EAAC,WAAW;QAAA,wBACxB;UAAI,SAAS,EAAC,cAAc;UAAA,UAAC;QAE7B;UAAA;UAAA;UAAA;QAAA,QAAK,eACL;UAAK,SAAS,EAAC,MAAM;UAAA,wBACnB;YAAQ,SAAS,EAAC,QAAQ;YAAC,OAAO,EAAEC,WAAY;YAAA,UAAC;UAEjD;YAAA;YAAA;YAAA;UAAA,QAAS,eACT;YAAQ,SAAS,EAAC,QAAQ;YAAC,OAAO,EAAEA,WAAY;YAAA,UAAC;UAEjD;YAAA;YAAA;YAAA;UAAA,QAAS,eACT;YAAQ,SAAS,EAAC,QAAQ;YAAC,OAAO,EAAEA,WAAY;YAAA,UAAC;UAEjD;YAAA;YAAA;YAAA;UAAA,QAAS,eACT;YAAQ,SAAS,EAAC,QAAQ;YAAC,OAAO,EAAEA,WAAY;YAAA,UAAC;UAEjD;YAAA;YAAA;YAAA;UAAA,QAAS,eACT;YAAQ,SAAS,EAAC,QAAQ;YAAC,OAAO,EAAEA,WAAY;YAAA,UAAC;UAEjD;YAAA;YAAA;YAAA;UAAA,QAAS,eACT;YAAQ,SAAS,EAAC,QAAQ;YAAC,OAAO,EAAEA,WAAY;YAAA,UAAC;UAEjD;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA;UAAA;UAAA;UAAA;QAAA,QACL;MAAA;QAAA;QAAA;QAAA;MAAA,QAEF;IAAA;MAAA;MAAA;MAAA;IAAA,QACF,eACN;MAAK,EAAE,EAAC,UAAU;MAAA,wBAChB;QAAK,SAAS,EAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG,eAC3B;QAAK,SAAS,EAAC,WAAW;QAAA,wBAExB;UAAK,SAAS,EAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QACf,eACN;UAAQ,SAAS,EAAC,QAAQ;UAAC,OAAO,EAAEA,WAAY;UAAA,UAAC;QAE/C;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QACP;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAAA,gBACL;AAGP,CAAC;AAAC,GA3EIF,QAAQ;EAAA,QACOJ,WAAW;AAAA;AAAA,KAD1BI,QAAQ;AA6Ed,eAAeO,OAAO,CAACT,eAAe,EAAEC,kBAAkB,CAAC,CAACC,QAAQ,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}